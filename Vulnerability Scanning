import requests

# Common vulnerabilities to check
vulnerabilities = {
    "Server Version Disclosure": "/",
    "Admin Page": "/admin",
    "Default Page Present": "/index.html"
}

headers_to_check = [
    "X-Frame-Options",
    "X-Content-Type-Options",
    "Content-Security-Policy",
    "Strict-Transport-Security"
]

def scan_url(base_url):
    for vulnerability, path in vulnerabilities.items():
        url = f"{base_url}{path}"
        print(f"Checking {url} for {vulnerability}")
        try:
            response = requests.get(url, timeout=5, verify=False) # verify=False is used to ignore SSL verification for this example
            if response.status_code == 200:
                print(f"Potential vulnerability found: {vulnerability} at {url}")
            for header in headers_to_check:
                if header not in response.headers:
                    print(f"Missing Security Header: {header} at {url}")
        except requests.RequestException as e:
            print(f"Error accessing {url}: {e}")

if __name__ == "__main__":
    base_url = 'http://example.com' # Change this to the website you have permission to scan
    scan_url(base_url)
